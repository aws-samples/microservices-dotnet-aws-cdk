Resources:
  demovpc6A63F275:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.30.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/Resource
  demovpcPublicSubnet1Subnet59C04EC3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.0.0/18
      VpcId:
        Ref: demovpc6A63F275
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/Subnet
  demovpcPublicSubnet1RouteTable51989EA1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: demovpc6A63F275
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/RouteTable
  demovpcPublicSubnet1RouteTableAssociationFF9AFCBE:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: demovpcPublicSubnet1RouteTable51989EA1
      SubnetId:
        Ref: demovpcPublicSubnet1Subnet59C04EC3
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/RouteTableAssociation
  demovpcPublicSubnet1DefaultRouteDE177143:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: demovpcPublicSubnet1RouteTable51989EA1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: demovpcIGW56AC0B57
    DependsOn:
      - demovpcVPCGWF2B48F8C
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/DefaultRoute
  demovpcPublicSubnet1EIPCA80177D:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/EIP
  demovpcPublicSubnet1NATGatewayAB5E6BBE:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: demovpcPublicSubnet1Subnet59C04EC3
      AllocationId:
        Fn::GetAtt:
          - demovpcPublicSubnet1EIPCA80177D
          - AllocationId
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet1/NATGateway
  demovpcPublicSubnet2Subnet4F3C6289:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.64.0/18
      VpcId:
        Ref: demovpc6A63F275
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/Subnet
  demovpcPublicSubnet2RouteTable034FAB8B:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: demovpc6A63F275
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/RouteTable
  demovpcPublicSubnet2RouteTableAssociation39E6991E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: demovpcPublicSubnet2RouteTable034FAB8B
      SubnetId:
        Ref: demovpcPublicSubnet2Subnet4F3C6289
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/RouteTableAssociation
  demovpcPublicSubnet2DefaultRoute5D66C9AC:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: demovpcPublicSubnet2RouteTable034FAB8B
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: demovpcIGW56AC0B57
    DependsOn:
      - demovpcVPCGWF2B48F8C
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/DefaultRoute
  demovpcPublicSubnet2EIPEA9A73CA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/EIP
  demovpcPublicSubnet2NATGateway9A5582EA:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: demovpcPublicSubnet2Subnet4F3C6289
      AllocationId:
        Fn::GetAtt:
          - demovpcPublicSubnet2EIPEA9A73CA
          - AllocationId
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PublicSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PublicSubnet2/NATGateway
  demovpcPrivateSubnet1Subnet60C4FF92:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.128.0/18
      VpcId:
        Ref: demovpc6A63F275
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet1/Subnet
  demovpcPrivateSubnet1RouteTable00225A39:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: demovpc6A63F275
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PrivateSubnet1
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet1/RouteTable
  demovpcPrivateSubnet1RouteTableAssociation7FF17595:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: demovpcPrivateSubnet1RouteTable00225A39
      SubnetId:
        Ref: demovpcPrivateSubnet1Subnet60C4FF92
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet1/RouteTableAssociation
  demovpcPrivateSubnet1DefaultRouteC02957FA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: demovpcPrivateSubnet1RouteTable00225A39
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: demovpcPublicSubnet1NATGatewayAB5E6BBE
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet1/DefaultRoute
  demovpcPrivateSubnet2Subnet53D6A690:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.30.192.0/18
      VpcId:
        Ref: demovpc6A63F275
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet2/Subnet
  demovpcPrivateSubnet2RouteTable15934A3F:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: demovpc6A63F275
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc/PrivateSubnet2
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet2/RouteTable
  demovpcPrivateSubnet2RouteTableAssociation8A33EBE6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: demovpcPrivateSubnet2RouteTable15934A3F
      SubnetId:
        Ref: demovpcPrivateSubnet2Subnet53D6A690
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet2/RouteTableAssociation
  demovpcPrivateSubnet2DefaultRoute93C66FBE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: demovpcPrivateSubnet2RouteTable15934A3F
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: demovpcPublicSubnet2NATGateway9A5582EA
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/PrivateSubnet2/DefaultRoute
  demovpcIGW56AC0B57:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebAppInfraStack/demo-vpc
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/IGW
  demovpcVPCGWF2B48F8C:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: demovpc6A63F275
      InternetGatewayId:
        Ref: demovpcIGW56AC0B57
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-vpc/VPCGW
  democluster9F0F8BE1:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-cluster/Resource
  TopicBFC7AF6E:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Customer subscription topic
      TopicName: demo-web-app-topic
    Metadata:
      aws:cdk:path: WebAppInfraStack/Topic/Resource
  demologgroupF8EFF667:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/demo/ecs-fargate-dotnet-microservices
      RetentionInDays: 1
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-log-group/Resource
  demoserviceLB4B2B1BF2:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - demoserviceLBSecurityGroupB7433664
            - GroupId
      Subnets:
        - Ref: demovpcPublicSubnet1Subnet59C04EC3
        - Ref: demovpcPublicSubnet2Subnet4F3C6289
      Type: application
    DependsOn:
      - demovpcPublicSubnet1DefaultRouteDE177143
      - demovpcPublicSubnet2DefaultRoute5D66C9AC
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/LB/Resource
  demoserviceLBSecurityGroupB7433664:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB WebAppInfraStackdemoserviceLB72BC164F
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: demovpc6A63F275
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/LB/SecurityGroup/Resource
  demoserviceLBSecurityGrouptoWebAppInfraStackdemoserviceServiceSecurityGroupFE37520180D63C1DEC:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - demoserviceLBSecurityGroupB7433664
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - demoserviceServiceSecurityGroupF47260B1
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/LB/SecurityGroup/to WebAppInfraStackdemoserviceServiceSecurityGroupFE375201:80
  demoserviceLBPublicListener0409B8C6:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: demoserviceLBPublicListenerECSGroup09A12C15
          Type: forward
      LoadBalancerArn:
        Ref: demoserviceLB4B2B1BF2
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/LB/PublicListener/Resource
  demoserviceLBPublicListenerECSGroup09A12C15:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: demovpc6A63F275
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/LB/PublicListener/ECSGroup/Resource
  demoserviceTaskDefTaskRole586A7A1C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSXRayDaemonWriteAccess
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/CloudWatchAgentServerPolicy
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/TaskDef/TaskRole/Resource
  demoserviceTaskDefTaskRoleDefaultPolicy78838EC6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: TopicBFC7AF6E
        Version: "2012-10-17"
      PolicyName: demoserviceTaskDefTaskRoleDefaultPolicy78838EC6
      Roles:
        - Ref: demoserviceTaskDefTaskRole586A7A1C
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/TaskDef/TaskRole/DefaultPolicy/Resource
  demoserviceTaskDef3D628E08:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: SNS_TOPIC_ARN
              Value:
                Ref: TopicBFC7AF6E
            - Name: ASPNETCORE_URLS
              Value: http://+:80
            - Name: EMF_LOG_GROUP_NAME
              Value: /ecs/demo/ecs-fargate-dotnet-microservices
          Essential: true
          Image:
            Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:17f3cd33e412a16dea9b6e8d45b20218717a202491a500f2946fe2d332c5745f
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: demologgroupF8EFF667
              awslogs-stream-prefix: ecs/web-api
              awslogs-region:
                Ref: AWS::Region
          Name: web
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
        - Cpu: 32
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: demologgroupF8EFF667
              awslogs-stream-prefix: ecs/web-api
              awslogs-region:
                Ref: AWS::Region
          Memory: 256
          Name: xray-daemon
          PortMappings:
            - ContainerPort: 2000
              Protocol: udp
        - Cpu: 32
          Environment:
            - Name: CW_CONFIG_CONTENT
              Value: '{"logs":{"metrics_collected":{"emf":{}}}}'
          Essential: true
          Image: public.ecr.aws/cloudwatch-agent/cloudwatch-agent:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: demologgroupF8EFF667
              awslogs-stream-prefix: ecs/web-api
              awslogs-region:
                Ref: AWS::Region
          Memory: 256
          Name: cwagent
          PortMappings:
            - ContainerPort: 25888
              Protocol: tcp
      Cpu: "512"
      ExecutionRoleArn:
        Fn::GetAtt:
          - demoserviceTaskDefExecutionRole2FFCFA31
          - Arn
      Family: WebAppInfraStackdemoserviceTaskDef1C742E47
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn:
        Fn::GetAtt:
          - demoserviceTaskDefTaskRole586A7A1C
          - Arn
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/TaskDef/Resource
  demoserviceTaskDefExecutionRole2FFCFA31:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/TaskDef/ExecutionRole/Resource
  demoserviceTaskDefExecutionRoleDefaultPolicyCB9D0E45:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - demologgroupF8EFF667
                - Arn
        Version: "2012-10-17"
      PolicyName: demoserviceTaskDefExecutionRoleDefaultPolicyCB9D0E45
      Roles:
        - Ref: demoserviceTaskDefExecutionRole2FFCFA31
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/TaskDef/ExecutionRole/DefaultPolicy/Resource
  demoserviceService92541146:
    Type: AWS::ECS::Service
    Properties:
      Cluster:
        Ref: democluster9F0F8BE1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DesiredCount: 1
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: web
          ContainerPort: 80
          TargetGroupArn:
            Ref: demoserviceLBPublicListenerECSGroup09A12C15
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - demoserviceServiceSecurityGroupF47260B1
                - GroupId
          Subnets:
            - Ref: demovpcPrivateSubnet1Subnet60C4FF92
            - Ref: demovpcPrivateSubnet2Subnet53D6A690
      TaskDefinition:
        Ref: demoserviceTaskDef3D628E08
    DependsOn:
      - demoserviceLBPublicListenerECSGroup09A12C15
      - demoserviceLBPublicListener0409B8C6
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/Service/Service
  demoserviceServiceSecurityGroupF47260B1:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: WebAppInfraStack/demo-service/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: demovpc6A63F275
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/Service/SecurityGroup/Resource
  demoserviceServiceSecurityGroupfromWebAppInfraStackdemoserviceLBSecurityGroupDA5F8ACB808B092541:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - demoserviceServiceSecurityGroupF47260B1
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - demoserviceLBSecurityGroupB7433664
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/Service/SecurityGroup/from WebAppInfraStackdemoserviceLBSecurityGroupDA5F8ACB:80
  demoserviceServiceTaskCountTargetAB404D38:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId:
        Fn::Join:
          - ""
          - - service/
            - Ref: democluster9F0F8BE1
            - /
            - Fn::GetAtt:
                - demoserviceService92541146
                - Name
      RoleARN:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":iam::"
            - Ref: AWS::AccountId
            - :role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/Service/TaskCount/Target/Resource
  demoserviceServiceTaskCountTargetCpuScalingF093261E:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WebAppInfraStackdemoserviceServiceTaskCountTargetCpuScalingE141C872
      PolicyType: TargetTrackingScaling
      ScalingTargetId:
        Ref: demoserviceServiceTaskCountTargetAB404D38
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 60
    Metadata:
      aws:cdk:path: WebAppInfraStack/demo-service/Service/TaskCount/Target/CpuScaling/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31TwY7aMBD9lt6NYem5BzbQFdKKoiTiigYzm7oEO/LYrFCUf+/YIYTdrXry8/PzePxmZi5ncvYN3mmijqdJrQ+yLTyok2Bq36Kay3bXKJG9md02E9twqLUqwsGgj9yIchs8lnCoceRHbkFklQavrbmLI1itt3HZgH8Bj+9wFVunLwzHwGvj0TEeBH0mt93Cc66/z2i8KFAFp/31xdnQpBz+S6wqh0Rf6LVJfCdQkWyzOhC/HlUD/AmugvgrOi3xTRs9/OkzY40HbdA9cLe7BbqLVr1PN1goqKNPMUhmg/ExAbcHIvQkl1ad0K3PUEUj2RY+kzk2lrS37voMhIIM51vaRqdaJdCJ2lbMvtrq7sGA0wf3DfhoLslF03BdU31eLRyfORuj8PgpYayBvFY1Kw5JoU114Qb5923Xv/ewf9RpdtPcNAN+OC/5Za75kPbDthMazrLNbd9pad1avpdao0edgDEUBG+J/eVkubfvRseAqQQfmX4pHY8AXyj6e2P8D0TXiRzJBsfepMLw5FR8GoW/gm9CPxmDJHaRNcfUC51YWr9BP/0un+R8NpWbVZlZh2zBZIeOWPLjwmfTpzifPKF/SOuJ487QZ5R5v/4FD/VVB7wDAAA=
    Metadata:
      aws:cdk:path: WebAppInfraStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  demoserviceLoadBalancerDNSE9520154:
    Value:
      Fn::GetAtt:
        - demoserviceLB4B2B1BF2
        - DNSName
  demoserviceServiceURL1659A9E9:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - demoserviceLB4B2B1BF2
              - DNSName
  DemoSnsTopicArn:
    Value:
      Ref: TopicBFC7AF6E
    Export:
      Name: DemoSnsTopicArn
  DemoClusterName:
    Value:
      Ref: democluster9F0F8BE1
    Export:
      Name: DemoClusterName
  DemoLogGroupName:
    Value: /ecs/demo/ecs-fargate-dotnet-microservices
    Export:
      Name: DemoLogGroupName
  DemoVpcId:
    Value:
      Ref: demovpc6A63F275
    Export:
      Name: DemoVpcId
  DemoDeployRegion:
    Value:
      Ref: AWS::Region
    Export:
      Name: DemoDeployRegion
  demoserviceServiceURLEndpoint:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - demoserviceLB4B2B1BF2
              - DNSName
          - /api/Books
    Export:
      Name: demoserviceServiceURLEndpoint
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

